openapi: 3.1.0
info:
  title: Data Space Catalog
  description: The service provides a REST API for managing and sharing catalog items.
  contact:
    name: HIRO-MicroDataCenters
    email: all-hiro@hiro-microdatacenters.nl
  license:
    name: MIT
    url: https://github.com/HIRO-MicroDataCenters-BV/ds-catalog/blob/main/LICENSE
  version: 0.1.0
  
paths:
  /catalog/:
    post:
      tags:
        - Catalog
      summary: Get Local Catalog
      description: |
        Get the local catalog with dataset list.
    
        The request accepts filters as a JSON object in the body.
    
        ### Format:
        Filters are structured as nested JSON objects. Each filter defines the path to the field with optional operators or language annotations.
        
        ```json
        {
          "context": {
            "<namespace>": "<namespaceURL>",
            ...
          }
          "filters": [
            {
              ["type": "<namespace:Class>",]
              "<namespace:attribute>[@<lang>][__operator]": <value> | <nestedObject>
            },
            ...
          ]
        }
        ```
    
        ### Supported operators:
        - `__gte`, `__lte` — range filtering
        - `__in` — list filtering
        - `__contains` — substring search
    
        ### Example:
        ```json
        {
          "context": {
            "dcat": "http://www.w3.org/ns/dcat#",
            "dspace": "http://data-space.org/",
            "med": "http://med.example.org/"
          },
          "filters": [
            {
              "dcat:dataset": {
                "dspace:extraMetadata": {
                  "type": "med:Diagnoses",
                  "med:hasDiagnosis": {
                    "med:code__contains": "I10"
                  }
                }
              }
            }
          ]
        }
        ```
    
        ### More filter examples:
        - ```json
          { "dcat:dataset": { "dcterms:title": "example" } }
          ```
        - ```json
          { "dcat:dataset": { "dcterms:title@en": "example" } }
          ```
        - ```json
          { "dcat:dataset": { "dcterms:title": { "@language": "en" } } }
          ```
        - ```json
          { "dcat:dataset": { "dcterms:title": { "@value": "example" } } }
          ```
        - ```json
          { "dcat:dataset": { "dcat:distribution": { "dcat:format": "PDF" } } }
          ```
        - ```json
          { "dcat:dataset": { "dspace:extraMetadata": { "med:sex": "M" } } }
          ```
        - ```json
          { "dcat:dataset": { "dspace:extraMetadata": { "type": "med:Patient", "med:sex": "M" } } }
          ```
        - ```json
          { "dcat:dataset": { "dspace:extraMetadata": { "med:weight": 75 } } }
          ```
        - ```json
          { "dcat:dataset": { "dspace:extraMetadata": { "med:weight": { "@value": 75 } } } }
          ```
        - ```json
          { "dcat:dataset": { "dspace:extraMetadata": { "med:weight": { "@type": "xsd:integer" } } } }
          ```
        - ```json
          { "dcat:dataset": { "dcterms:datePublished__gte": "2021-01-01" } }
          ```
        - ```json
          { "dcat:dataset": { "dcterms:datePublished__lte": "2021-12-31" } }
          ```
        - ```json
          { "dcat:dataset": { "dspace:extraMetadata": { "med:weight__gte": 70 } } }
          ```
        - ```json
          { "dcat:dataset": { "dspace:extraMetadata": { "med:weight__lte": 70 } } }
          ```
        - ```json
          { "dcat:dataset": { "dcat:keyword__in": ["science", "health"] } }
          ```
        - ```json
          { "dcat:dataset": { "dcterms:title@en__contains": "example" } }
          ```
      operationId: get_catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - context
                - filters
              type: object
              properties:
                context:
                  $ref: "#/components/schemas/Context"
                filters:
                  type: array
                  items:
                    type: object
                    additionalProperties: true
              example:
                context:
                  dcat: "http://www.w3.org/ns/dcat#"
                  dspace: "http://data-space.org/"
                  med: "http://med.example.org/"
                filters:
                  - "dcat:dataset":
                      "dspace:extraMetadata":
                        "type": "med:Diagnoses"
                        "med:hasDiagnosis":
                          "med:code__contains": "I10"
      responses:
        '200':
          description: Successful Response
          content:
            application/ld+json:
              schema:
                type: object
                required:
                  - "@context"
                  - "@graph"
                properties:
                  "@context":
                    $ref: "#/components/schemas/Context"
                  "@graph":
                    $ref: "#/components/schemas/Catalog"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        
  /datasets/:
    post:
      tags:
        - Datasets
      summary: Save Dataset
      description: Create or update a dataset
      operationId: save_dataset
      requestBody:
        required: true
        content:
          application/ld+json:
            schema:
              type: object
              required:
                - "@context"
                - "@graph"
              properties:
                "@context":
                  $ref: "#/components/schemas/Context"
                "@graph":
                  type: array
                  items:
                    $ref: '#/components/schemas/DatasetInput'
      responses:
        '200':
          description: Successful Response
          content:
            application/ld+json:
              schema:
                type: object
                required:
                - "@context"
                - "@graph"
                properties:
                  "@context":
                    $ref: "#/components/schemas/Context"
                  "@graph":
                    $ref: "#/components/schemas/Dataset"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
                
  /datasets/{id}/:
    get:
      tags:
        - Datasets
      summary: Get Dataset
      description: Get the dataset
      operationId: get_dataset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/ld+json:
              schema:
                type: object
                required:
                  - "@context"
                  - "@graph"
                properties:
                  "@context":
                    $ref: "#/components/schemas/Context"
                  "@graph":
                    $ref: "#/components/schemas/Dataset"
        '404':
          description: Dataset not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
                
    delete:
      tags:
        - Datasets
      summary: Delete Dataset
      description: Delete the dataset
      operationId: delete_dataset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '204':
          description: Successful Response
        '404':
          description: Dataset not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
                
  /datasets/{id}/share/:
    post:
      tags:
        - Sharing
      summary: Share Dataset
      description: Share the dataset
      operationId: share_dataset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '204':
          description: Successful Response
        '404':
          description: Dataset not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

  /datasets/{id}/unshare/:
    post:
      tags:
        - Sharing
      summary: Unshare Dataset
      description: Unshare the dataset
      operationId: unshare_dataset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '204':
          description: Successful Response
        '404':
          description: Dataset not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

components:
  schemas:
    LangString:
      type: object
      required:
        - "@value"
        - "@language"
      properties:
        "@value":
          type: string
        "@language":
          type: string
          example: "en"
          
    DomainSpecificEntity:
      title: Domain-specific Entity
      type: object
      required:
        - "@id"
        - "@type"
      properties:
        "@id":
          title: Identifier
          type: string
        "@type":
          title: Type
          type: string
      additionalProperties: true
  
    RelEntity:
      title: RelEntity
      type: object
      required:
        - "@id"
      properties:
        "@id":
          title: Identifier
          type: string
      additionalProperties: true
    
    Theme:
      title: Theme
      description: Category or classification.
      type: array
      items:
        type: object
        required:
          - "@id"
          - "@type"
          - "skos:prefLabel"
        properties:
          "@id":
            title: Identifier
            type: string
          "@type":
            title: Type
            description: Ontology class type.
            type: string
          "skos:prefLabel":
            type: array
            items:
              $ref: '#/components/schemas/LangString'
      additionalProperties: true
      example:
        - "@id": "http://eurovoc.europa.eu/100142"
          "@type": "skos:Concept"
          "skos:prefLabel":
            - "@value": "Agriculture"
              "@language": "en"
        - "@id": "http://eurovoc.europa.eu/100141"
          "@type": "skos:Concept"
          "skos:prefLabel":
            - "@value": "Health"
              "@language": "en"

    Context:
      type: object
      additionalProperties:
        type: string
      example:
        "xsd": "http://www.w3.org/2001/XMLSchema#"
        "dcat": "http://www.w3.org/ns/dcat#"
        "dcatap":	"http://data.europa.eu/r5r/"
        "dcterms": "http://purl.org/dc/terms/"
        "spdx": "http://spdx.org/rdf/terms#"
        "foaf": "http://xmlns.com/foaf/0.1/"
        "skos": "http://www.w3.org/2004/02/skos/core#"
        "dspace": "http://data-space.org/"
    
    Catalog:
      title: Catalog
      type: object
      required:
        - "@id"
        - "@type"
        - "dcterms:title"
        - "dcterms:description"
        - "dcterms:publisher"
      properties:
        "@id":
          title: Identifier
          description: Unique identifier for the distribution (URI or other ID).
          type: string
          example: "https://example.com/catalog/123"
        "@type":
          title: Type
          description: Ontology class type.
          type: string
          example: "dcat:Catalog"
        "dcterms:title":
          title: Title
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          example:
            - "@language": "en"
              "@value": "Sample Catalog"
        "dcterms:description":
          title: Description
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          example:
            - "@language": "en"
              "@value": "This is a sample catalog containing various datasets and services."
        "dcterms:publisher":
          title: Publisher
          allOf:
            - $ref: '#/components/schemas/Agent'
        "dcat:dataset":
          title: Dataset
          description: A dataset that is listed in the catalog.
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Dataset'
              - $ref: '#/components/schemas/DatasetSeries'
      additionalProperties: true

    DatasetSeries:
      title: Dataset Series
      type: object
      required:
        - "@id"
        - "@type"
        - "dcterms:title"
        - "dcterms:description"
      properties:
        "@id":
          title: Identifier
          description: Unique identifier for the Dataset Series (URI or other ID).
          type: string
          example: "https://example.com/dataset-series/789"
        "@type":
          title: Type
          description: Ontology class type.
          type: string
          example: "dcat:DatasetSeries"
        "dcterms:identifier":
          title: Identifier
          description: Local, domain identifier. Can be any string value (e.g. UUID, system code, serial number, etc.).
          type: string
          example: "abc-123-xyz"
        "dcterms:title":
          title: Title
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          example:
            - "@language": "en"
              "@value": "Sample Dataset Series Title"
        "dcterms:description":
          title: Description
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          example:
            - "@language": "en"
              "@value": "This dataset contains sample data for testing purposes."
            - "@language": "es"
              "@value": "Este conjunto de datos contiene datos de ejemplo para fines de prueba."
        "dcat:keyword":
          title: Keyword
          description: Tags associated with the dataset.
          type: array
          items:
            type: string
          example:
            - "sample"
            - "data"
        "dcterms:license":
          title: License
          description: License under which the dataset is distributed.
          type: string
          example: "https://example.com/license/xyz"
        "dcat:theme":
          $ref: '#/components/schemas/Theme'
        "dcat:first":
          $ref: '#/components/schemas/RelEntity'
        "dcat:last":
          $ref: '#/components/schemas/RelEntity'
        "dcat:previous":
          $ref: '#/components/schemas/RelEntity'
        "dcterms:publisher":
          $ref: '#/components/schemas/Agent'

    DatasetBase:
      title: Dataset Base
      type: object
      required:
        - "@id"
        - "@type"
        - "dcterms:title"
        - "dcterms:description"
      properties:
        "@id":
          title: Identifier
          description: Unique identifier for the distribution (URI or other ID).
          type: string
          example: "https://example.com/dataset/789"
        "@type":
          title: Type
          description: Ontology class type.
          type: string
          example: "dcat:Dataset"
        "dcterms:identifier":
          title: Identifier
          description: Local, domain identifier. Can be any string value (e.g. UUID, system code, serial number, etc.).
          type: string
          example: "abc-123-xyz"
        "dcterms:title":
          title: Title
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          example:
            - "@language": "en"
              "@value": "Sample Dataset Title"
            - "@language": "es"
              "@value": "Título del conjunto de datos de ejemplo"
        "dcterms:description":
          title: Description
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          example:
            - "@language": "en"
              "@value": "This dataset contains sample data for testing purposes."
            - "@language": "es"
              "@value": "Este conjunto de datos contiene datos de ejemplo para fines de prueba."
        "dcat:keyword":
          title: Keyword
          description: Tags associated with the dataset.
          type: array
          items:
            type: string
          example:
            - "sample"
            - "data"
        "dcterms:license":
          title: License
          description: License under which the dataset is distributed.
          type: string
          example: "https://example.com/license/xyz"
        "dcat:theme":
          $ref: '#/components/schemas/Theme'
        "dcat:distribution":
          title: Distribution
          type: array
          items:
            $ref: '#/components/schemas/Distribution'
        "dcat:inSeries":
          $ref: '#/components/schemas/RelEntity'
        "dspace:extraMetadata":
          title: Domain-specific metadata
          type: array
          items:
            $ref: '#/components/schemas/DomainSpecificEntity'
          example:
            - "@id": "https://example.com/metadata/1"
              "@type": "med:Patient"
              "med:height": {
                "@value": "180",
                "@type": "xsd:integer"
              }
              "med:weight": {
                "@value": "75",
                "@type": "xsd:integer"
              }
              "med:sex": "M"
              "med:birthDate": "1990-05-20"
            - "@id": "https://example.com/metadata/2"
              "@type": "med:Diagnoses"
              "med:hasDiagnosis":
                - {
                    "@id": "https://example.com/diagnosis/1",
                    "@type": "med:Diagnosis",
                    "med:code": "I10",
                    "med:description": "Essential (primary) hypertension"
                  }
                - {
                    "@id": "https://example.com/diagnosis/2",
                    "@type": "med:Diagnosis",
                    "med:code": "E11",
                    "med:description": "Type 2 diabetes mellitus"
                  }
      additionalProperties: true
      
    DatasetInput:
      title: Dataset Input
      allOf:
        - $ref: '#/components/schemas/DatasetBase'
      
    Dataset:
      title: Dataset
      allOf:
        - $ref: '#/components/schemas/DatasetBase'
        - type: object
          required:
            - "dcterms:issued"
            - "nextgen:isShared"
          properties:
            "dcterms:issued":
              title: Issued
              type: string
              format: date
              example: "2025-03-13"
            "dcterms:publisher":
              title: Publisher
              allOf:
                - $ref: '#/components/schemas/Agent'
            "dspace:isShared":
              title: Shared
              description: Indicates whether the dataset is shared across multiple catalogs.
              type: boolean
              
    Checksum:
      title: Checksum
      type: object
      required:
        - "spdx:algorithm"
        - "spdx:checksumValue"
      properties:
        "spdx:algorithm":
          title: Algorithm
          description: Algorithm used to compute the checksum.
          type: string
          enum:
            - SHA-1
            - SHA-256
            - MD5
          example: "SHA-256"
        "spdx:checksumValue":
          title: Checksum Value
          description: The actual checksum value.
          type: string
          example: "3a7bd3e2360a3b5c1b2ef3b1a4e8f7a6"
      additionalProperties: true
  
    Distribution:
      title: Distribution
      type: object
      required:
        - "@id"
        - "@type"
        - "dcat:accessURL"
      properties:
        "@id":
          title: Identifier
          description: Unique identifier for the distribution (URI or other ID).
          type: string
          example: "https://example.com/distribution/489"
        "@type":
          title: Type
          description: Ontology class type.
          type: string
          example: "dcat:Distribution"
        "dcterms:description":
          title: Description
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          example:
            - "@language": "en"
              "@value": "This is a sample distribution."
        "dcat:byteSize":
          title: Byte Size
          description: Size of the distribution in bytes.
          type: integer
          example:
            "@value": 1024
            "@type": "xsd:decimal"
        "dcat:mediaType":
          title: Media Type
          description: MIME type of the distribution.
          allOf:
            - $ref: '#/components/schemas/RelEntity'
          example:
            "@id": "https://www.iana.org/assignments/media-types/application/json"
        "dcat:format":
          title: Format
          description: File format of the distribution (e.g., CSV, JSON).
          type: string
          example: "JSON"
        "dcatap:availability":
          title: Availability
          description: Availability status of the distribution.
          allOf:
            - $ref: '#/components/schemas/RelEntity'
          example:
            - "@id": "http://data.europa.eu/r5r/AVAILABLE"
        "spdx:checksum":
          title: Checksum
          description: Checksum for integrity verification.
          allOf:
            - $ref: "#/components/schemas/Checksum"
        "dcat:accessURL":
          title: Access URL
          description: The resource at the access URL may contain information about how to get the Dataset.
          allOf:
            - $ref: '#/components/schemas/RelEntity'
          example:
            "@id": "https://example.com/distribution/489/information"
        "dcat:accessService":
          title: Access Service
          description: Data service providing access to the distribution.
          type: array
          items:
            $ref: "#/components/schemas/DataService"
      additionalProperties: true
      
    DataService:
      title: Data Service
      type: object
      required:
        - "@id"
        - "@type"
        - "dcat:endpointURL"
      properties:
        "@id":
          title: Identifier
          description: Unique identifier for the data service (URI or other ID).
          type: string
          example: "https://example.com/dataservice/456"
        "@type":
          title: Type
          description: Ontology class type.
          type: string
          example: "dcat:DataService"
        "dcterms:title":
          title: Title
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          example:
            - "@language": "en"
              "@value": "Sample Data Service"
        "dcat:endpointURL":
          title: Endpoint URL
          description: URL of the data service endpoint.
          allOf:
            - $ref: '#/components/schemas/RelEntity'
          example:
            "@id": "https://example.com/dataservice/456/download"
      additionalProperties: true
    
    Agent:
      title: Agent
      type: object
      required:
        - "@id"
        - "foaf:name"
      properties:
        "@id":
          title: Identifier
          description: Unique identifier for the person (URI or other ID).
          type: string
          example: "https://example.com/person/123"
        "@type":
          title: Type
          description: Ontology class type.
          type: string
          example: "foaf:Agent"
        "foaf:name":
          title: Name
          description: Full name of the person.
          type: string
          example: "John Doe"
      additionalProperties: true
  
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
          example:
            - "@graph"
            - 0
            - "dcat:dataset"
            - 0
            - "dcterms:title"
            - 0
            - "value"
        msg:
          type: string
          title: Message
          example: "Field required"
        type:
          type: string
          title: Error Type
          example: "value_error.missing"
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
      
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
